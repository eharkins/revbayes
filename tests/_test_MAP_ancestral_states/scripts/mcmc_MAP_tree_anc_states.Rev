
#
# Test script to jointly estimate phylogeny and ancestral states, plus summarizing
# the MAP tree and MAP ancestral states.
# 
# Will Freyman, UC Berkeley
# freyman@berkeley.edu
# http://willfreyman.org
#

seed(12345)

# read in the known tree
known_tree <- readTrees("data/test.tree")[1]
taxa = known_tree.taxa()

# read in the observed morphological data
data_morph = readCharacterDataDelimited(file="data/test_morph_data.csv", type="NaturalNumbers", stateLabels=4, delimiter=",", headers=false)

# simulate molecular data over the known tree
data_mol ~ dnPhyloCTMC(tree=known_tree, Q=fnJC(4), branchRates=0.1, type="DNA", nSites=20)



# model to estimate tree
root_age <- known_tree.rootAge()
tree ~ dnBDP(lambda=1, rootAge=root_age, taxa=taxa)

mvi = 1

moves[mvi++] = mvNNI(tree, weight=20)
moves[mvi++] = mvNodeTimeSlideUniform(tree, weight=20)

# substitution model
mol ~ dnPhyloCTMC(tree=tree, Q=fnJC(4), branchRates=0.1, type="DNA")
mol.clamp(data_mol)

# model to estimate ancestral states of morphological character
rate ~ dnExp(10)
moves[mvi++] = mvSlide(rate, weight=2)

morph ~ dnPhyloCTMC(tree=tree, Q=fnJC(4), branchRates=rate, type="NaturalNumbers")
morph.clamp(data_morph)



# set up and run MCMC
monitors[1] = mnScreen(printgen=10, rate)
monitors[2] = mnFile(tree, filename="output/mcmc_MAP_tree_anc_states.trees", printgen=10)
monitors[3] = mnJointConditionalAncestralState(tree=tree, ctmc=morph, type="NaturalNumbers", withTips=true, withStartStates=true, filename="output/mcmc_MAP_tree_anc_states.log", printgen=10)

model = model(tree)
mcmc = mcmc(moves, monitors, model)
mcmc.run(500)

# finally summarize MAP tree and MAP ancestral states
state_trace = readAncestralStateTrace(file="output/mcmc_MAP_tree_anc_states.log")
tree_trace = readAncestralStateTreeTrace(file="output/mcmc_MAP_tree_anc_states.trees", treetype="clock")

map_tree = mapTree(tree_trace)
anc_tree = ancestralStateTree(tree=map_tree, tree_trace=tree_trace, ancestral_state_trace_vector=state_trace, include_start_states=true, file="output/mcmc_MAP_tree_anc_states_summary.tree", summary_statistic="MAP")

q()
